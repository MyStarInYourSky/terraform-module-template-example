name: semantic-release
on:
  push:
    branches:
      - main
permissions:
  actions: read
  attestations: none
  checks: read
  contents: write
  deployments: none
  id-token: write
  issues: write
  discussions: read
  packages: write
  pages: none
  pull-requests: write
  repository-projects: none
  security-events: none
  statuses: none
jobs:
  oras-release:
    runs-on: ubuntu-24.04
    needs: [semantic-release]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: oras-project/setup-oras@v1
        with:
          version: 1.2.3
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create module package
        run: zip -r ../module-package.zip .
      - name: Upload current version of module with ORAS
        run: oras push --artifact-type=application/vnd.opentofu.modulepkg ghcr.io/mystarinyoursky/terraform-module-template-example:${{needs.semantic-release.outputs.releaseversion}} ../module-package.zip:archive/zip
      - name: Upload latest module with ORAS
        run: oras push --artifact-type=application/vnd.opentofu.modulepkg ghcr.io/mystarinyoursky/terraform-module-template-example:latest ../module-package.zip:archive/zip
  semantic-release:
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    env:
      SEMANTICRELEASE_VERSION: '11.0.1'
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PR_NUMBER: ${{ github.event.number }}
      REPO_NAME: ${{ github.repository }}
    outputs:
      releaseversion: ${{ steps.releaseversion.outputs.releaseversion }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 23
      - name: Install and Configure Semantic-Release
        run: npm install @semantic-release/github@${SEMANTICRELEASE_VERSION} @semantic-release/exec
      - name: Run Semantic-Release
        id: releaseversion
        run: npx semantic-release
